Create database music;

 select * from album2;
 /*Easy
 /* Q1: Who is the senior most employee based on job title? */
 
 select * from employee;
 
 select first_name, last_name, title from employee
 order by levels desc
 limit 1;
 
 /* Q2: Which countries have the most Invoices? */

select * from invoice;

select count(*) as Country_count, billing_country from invoice 
group by billing_country
order by 1 desc;

/* Q3: What are top 3 values of total invoice? */

select total from invoice
order by total desc
limit 3;

/* Q4: Which city has the best customers? We would like to throw a promotional Music Festival in the city we made the most money. 
Write a query that returns one city that has the highest sum of invoice totals. 
Return both the city name & sum of all invoice totals */

select sum(total) as invoice_total , billing_city from invoice
group by billing_city
order by 1 desc;

/* Q5: Who is the best customer? The customer who has spent the most money will be declared the best customer. 
Write a query that returns the person who has spent the most money.*/

select * from customer;
select * from invoice;
 
select customer.customer_id, customer.first_name, customer.last_name, sum(invoice.total) as total
from customer
join invoice on customer.customer_id = invoice.customer_id
group by 1,2,3
order by total desc
limit 1;


/* Question Set 2 - Moderate */

/* Q1: Write query to return the email, first name, last name, & Genre of all Rock Music listeners. 
Return your list ordered alphabetically by email starting with A. */

select * from genre;

select genre.name, customer.first_name, customer.last_name, customer.email
from customer join genre
on customer.support_rep_id = genre.genre_id
where genre.name = "Rock"
group by 1,2,3,4
order by customer.email asc;

select * from playlist_track;
select * from invoice_line;
select * from track;

SELECT DISTINCT email AS Email,first_name AS FirstName, last_name AS LastName, genre.name AS Name
FROM customer
JOIN invoice ON invoice.customer_id = customer.customer_id
JOIN invoice_line ON invoice_line.invoice_id = invoice.invoice_id
JOIN track ON track.track_id = invoice_line.track_id
JOIN genre ON genre.genre_id = track.genre_id
WHERE genre.name LIKE 'Rock'
ORDER BY email;


/* Q2: Let's invite the artists who have written the most rock music in our dataset. 
Write a query that returns the Artist name and total track count of the top 10 rock bands. */

select artist.artist_id, artist.name, count(artist.artist_id) as number_songs from genre
join track on genre.genre_id = track.genre_id
join album2 on album2.album_id = track.album_id
join artist on artist.artist_id = album2.artist_id
where genre.name = 'Rock'
group by 1,2
order by 3 desc
limit 10;


/* Q3: Return all the track names that have a song length longer than the average song length. 
Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first. */

select  track.name, milliseconds from track 
where milliseconds > (select avg(milliseconds) as song_lenght from track)
order by milliseconds desc;

/* Question Set 3 - Advance */

/* Q1: Find how much amount spent by each customer on artists? Write a query to return customer name, artist name and total spent */


with best_selling_artist as(
select artist.artist_id, artist.name, sum(invoice_line.unit_price * invoice_line.quantity) as total_sale
from invoice_line join track on invoice_line.track_id = track.track_id
join album2 on album2.album_id = track.album_id
join artist on artist.artist_id = album2.artist_id
group by 1,2
order by 3 desc
limit 1
)
select c.first_name, c.last_name, bsa.name, bsa.total_sale
from customer c join invoice i on c.customer_id = i.customer_id
join invoice_line il on i.invoice_id = il.invoice_id
join track t on il.track_id = t.track_id
join album2 a2 on t.album_id = a2.album_id
join best_selling_artist bsa on a2.artist_id = bsa.artist_id
group by 1,2,3,4
order by 4 desc;


/* Q2: We want to find out the most popular music Genre for each country. We determine the most popular genre as the genre 
with the highest amount of purchases. Write a query that returns each country along with the top Genre. For countries where 
the maximum number of purchases is shared return all Genres. */


with popular_genre  as(
select g.genre_id, g.name, c.country, count(il.quantity) as purchase,
row_number() over(partition by c.country order by count(il.quantity) desc) as row_num 
from genre g
join track t on g.genre_id = t.genre_id
join invoice_line il on t.track_id = il.track_id
join invoice i on il.invoice_id = i.invoice_id
join customer c on i.customer_id = c.customer_id
group by 1,2,3
order by 3 asc , 4 desc
)
select * from popular_genre where row_num <= 1;


/* Q3: Write a query that determines the customer that has spent the most on music for each country. 
Write a query that returns the country along with the top customer and how much they spent. 
For countries where the top amount spent is shared, provide all customers who spent this amount. */

WITH Customter_with_country AS (
		SELECT customer.customer_id,first_name,last_name,billing_country,SUM(total) AS total_spending,
	    ROW_NUMBER() OVER(PARTITION BY billing_country ORDER BY SUM(total) DESC) AS Row_num 
		FROM invoice
		JOIN customer ON customer.customer_id = invoice.customer_id
		GROUP BY 1,2,3,4
		ORDER BY 4 ASC,5 DESC)
SELECT * FROM Customter_with_country WHERE Row_num <= 1
